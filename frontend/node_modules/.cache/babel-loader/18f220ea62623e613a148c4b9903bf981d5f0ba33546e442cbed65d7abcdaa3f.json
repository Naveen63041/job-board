{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\n\n// Register a new user\nconst registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n  }\n};\n\n// Login a user\nconst loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n  }\n};\n\n// Get all jobs\nconst getJobs = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/jobs`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n  }\n};\n\n// Assign to a variable first to satisfy ESLint\nconst API = {\n  registerUser,\n  loginUser,\n  getJobs\n};\nexport default API;","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","response","post","data","error","_error$response","loginUser","credentials","_error$response2","getJobs","get","_error$response3","API"],"sources":["C:/Users/navee/OneDrive/Attachments/Desktop/Job Board/frontend/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\n// Register a new user\r\nconst registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Login a user\r\nconst loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Get all jobs\r\nconst getJobs = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/jobs`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error;\r\n  }\r\n};\r\n\r\n// Assign to a variable first to satisfy ESLint\r\nconst API = { registerUser, loginUser, getJobs };\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,gBAAgB,EAAEE,QAAQ,CAAC;IAC5E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK;EACrC;AACF,CAAC;;AAED;AACA,MAAME,SAAS,GAAG,MAAOC,WAAW,IAAK;EACvC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,aAAa,EAAES,WAAW,CAAC;IAC5E,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAI,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAIC,KAAK;EACrC;AACF,CAAC;;AAED;AACA,MAAMK,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,YAAY,OAAO,CAAC;IACxD,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAO,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI,KAAIC,KAAK;EACrC;AACF,CAAC;;AAED;AACA,MAAMQ,GAAG,GAAG;EAAEb,YAAY;EAAEO,SAAS;EAAEG;AAAQ,CAAC;AAEhD,eAAeG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}